{"version":3,"file":"static/js/579.5ad43e5c.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","components/FilmCard/FilmCard.styled.js","components/FilmCard/FilmCard.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import { BiCommentDetail, BiGroup } from 'react-icons/bi';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledMovieContainer = styled.div`\n  padding: 20px;\n`;\n\nexport const StyledButtonsList = styled.ul`\n  list-style: none;\n  font-size: 18px;\n  font-weight: 600;\n  padding: 10px;\n  display: flex;\n  gap: 30px;\n`;\n\nexport const BtnBack = styled.button`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  background-color: transparent;\n  border: 2px solid green;\n  &:hover {\n    cursor: pointer;\n    background-color: green;\n    font-weight: 500;\n  }\n  &.active {\n    background-color: green;\n    font-weight: 500;\n    color: black;\n  }\n`;\n\nexport const StyledButton = styled.li`\n  margin-bottom: 20px;\n  border: 3px black solid;\n  border-radius: 5px;\n  &:hover {\n    border-color: green;\n  }\n`;\n\nexport const StyledButtonLink = styled(Link)`\n  padding: 10px;\n  text-decoration: none;\n  font-weight: 400;\n  font-size: large;\n  margin-right: 25px;\n  display: inline-flex;\n  align-items: center;\n  color: black;\n  &:hover {\n    color: green;\n  }\n`;\n\nconst IconBase = `\n height: 20px;\n width: 20px; \n margin-right: 10px;\n`;\n\nexport const StyledCastIcon = styled(BiGroup)`\n  ${IconBase}\n`;\n\nexport const StyledReviewsIcon = styled(BiCommentDetail)`\n  ${IconBase}\n`;\n","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  padding-top: 25px;\n  padding-bottom: 25px;\n  border-bottom: 3px double grey;\n`;\nexport const MovieCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  @media screen and (min-width: 1200px) {\n    flex-direction: row;\n  }\n`;\nexport const GenresList = styled.ul`\n  display: flex;\n  gap: 5px;\n  list-style: none;\n  padding: 0px;\n`;\n","import { MovieCard, GenresList, Section } from './FilmCard.styled';\n\nconst FilmCard = ({\n  original_title,\n  overview,\n  vote_average,\n  genres,\n  backdrop_path,\n}) => {\n  const NO_IMAGE =\n    'https://upload.wikimedia.org/wikipedia/commons/1/14/No_Image_Available.jpg';\n  const IMG_PATH = 'https://image.tmdb.org/t/p/w500/';\n  let image = !!backdrop_path ? IMG_PATH + backdrop_path : NO_IMAGE;\n\n  return (\n    <Section>\n      <MovieCard>\n        <img src={image} alt={original_title} />\n        <div>\n          <h2>{original_title}</h2>\n          <h3>Rating</h3>\n          <p>{vote_average}</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <GenresList>\n            {genres && genres.map(({ name }) => <li key={name}>{name}</li>)}\n          </GenresList>\n        </div>\n      </MovieCard>\n    </Section>\n  );\n};\n\nexport default FilmCard;\n","import React, { Suspense, useEffect, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\nimport {\n  StyledCastIcon,\n  StyledMovieContainer,\n  StyledButton,\n  StyledButtonLink,\n  StyledButtonsList,\n  StyledReviewsIcon,\n  BtnBack,\n} from './MovieDetails.styled';\nimport { AiOutlineArrowLeft } from 'react-icons/ai';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from 'components/Loader/Loader';\nimport { fetchMovieDetalsById } from 'services/apiFilms';\nimport FilmCard from 'components/FilmCard/FilmCard';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieDetails, setMovieDetails] = useState([]);\n  // const [error, setError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchFilmes = async () => {\n      try {\n        const filmDetails = await fetchMovieDetalsById(movieId);\n        setMovieDetails(filmDetails);\n      } catch (error) {\n        toast.error(error.message);\n        // setError(true);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFilmes();\n  }, [movieId]);\n\n  if (loading) {\n    return <Loader />;\n  }\n\n  const { original_title, overview, vote_average, genres, backdrop_path } =\n    movieDetails;\n  return (\n    <StyledMovieContainer>\n      <BtnBack onClick={() => navigate(location.state?.from ?? '/')}>\n        <AiOutlineArrowLeft size=\"20\" />\n      </BtnBack>\n      <FilmCard\n        original_title={original_title}\n        overview={overview}\n        vote_average={vote_average}\n        genres={genres}\n        backdrop_path={backdrop_path}\n      />\n      <StyledButtonsList>\n        <StyledButton>\n          <StyledButtonLink to=\"cast\" state={location.state}>\n            <StyledCastIcon /> Cast\n          </StyledButtonLink>\n        </StyledButton>\n        <StyledButton>\n          <StyledButtonLink to=\"reviews\" state={location.state}>\n            <StyledReviewsIcon /> Reviews\n          </StyledButtonLink>\n        </StyledButton>\n      </StyledButtonsList>\n      <Suspense fallback={<div>Loading...</div>}>\n        <Outlet />\n      </Suspense>\n    </StyledMovieContainer>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["StyledMovieContainer","styled","_templateObject","_taggedTemplateLiteral","StyledButtonsList","_templateObject2","BtnBack","_templateObject3","StyledButton","_templateObject4","StyledButtonLink","Link","_templateObject5","IconBase","StyledCastIcon","BiGroup","_templateObject6","StyledReviewsIcon","BiCommentDetail","_templateObject7","Section","MovieCard","GenresList","_ref","original_title","overview","vote_average","genres","backdrop_path","image","_jsx","children","_jsxs","src","alt","map","_ref2","name","movieId","useParams","_useState","useState","_useState2","_slicedToArray","movieDetails","setMovieDetails","_useState3","_useState4","loading","setLoading","location","useLocation","navigate","useNavigate","useEffect","fetchFilmes","_asyncToGenerator","_regeneratorRuntime","_callee","filmDetails","_context","prev","next","fetchMovieDetalsById","sent","t0","toast","message","finish","stop","apply","arguments","Loader","onClick","_location$state$from","_location$state","state","from","AiOutlineArrowLeft","size","FilmCard","to","Suspense","fallback","Outlet"],"sourceRoot":""}